{"version":3,"sources":["components/Blog.js","components/Notification.js","components/LoginForm.js","components/BlogForm.js","services/blogs.js","services/login.js","App.js","index.js"],"names":["Blog","blog","className","title","author","Notification","message","style","errorStyle","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","successStyle","infoStyle","styleToChoose","LoginForm","props","onSubmit","handleLogin","type","value","username","name","onChange","target","setUsername","password","setPassword","BlogForm","addBlog","blogTitle","handleTitleChange","blogAuthor","handleAuthorChange","blogUrl","handleUrlChange","token","getAll","axios","get","then","response","data","create","newObject","a","config","headers","Authorization","post","setToken","newToken","login","credentials","App","useState","blogs","setBlogs","user","setUser","newMessage","setNewMessage","newMessageStyle","setNewMessageStyle","setBlogTitle","setBlogAuthor","setBlogUrl","useEffect","blogService","fetchData","loggedUserJSON","window","localStorage","getItem","loggedUser","JSON","parse","event","preventDefault","loginService","userToLogin","setItem","stringify","makeMessage","blogObject","url","createdBlog","concat","ms","messageTimeOut","setTimeout","onClick","removeItem","location","reload","map","key","id","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5a7a6ce4.chunk.js","sourcesContent":["import React from 'react'\r\nconst Blog = ({ blog }) => (\r\n    <li className='blog'>\r\n        Title: {blog.title}, Author: {blog.author}\r\n    </li>\r\n)\r\n\r\nexport default Blog\r\n","import React from 'react'\n\nconst Notification = ({ message, style }) => {\n\n    const errorStyle = {\n        color: 'red',\n        background: 'lightgrey',\n        fontSize: '20px',\n        borderStyle: 'solid',\n        borderRadius: '5px',\n        padding: '10px',\n        marginBottom: '10px'\n    }\n    \n    const successStyle = {...errorStyle, color: 'green'}\n\n    const infoStyle = {...errorStyle, color: 'blue'}\n    \n    const styleToChoose = style === 'success'\n        ? successStyle\n        : style === 'error'\n            ? errorStyle\n            : infoStyle\n\n    if (message === null) {\n        return null\n    }\n    return (\n        <div style={styleToChoose}>\n            {message}\n        </div>\n    )\n}\n\nexport default Notification","import React from 'react'\n\nconst LoginForm = (props) => {\n    return (\n        <form onSubmit={props.handleLogin}>\n            <h3>Log in to Blog App</h3>\n            <div>\n                Username:\n                <input\n                type=\"text\"\n                value={props.username}\n                name=\"Username\"\n                onChange={({ target }) => props.setUsername(target.value)}\n                />\n            </div>\n            <div>\n                Password:\n                <input\n                type=\"password\"\n                value={props.password}\n                name=\"Password\"\n                onChange={({ target }) => props.setPassword(target.value)}\n                />\n            </div>\n            <button className='btn' type=\"submit\">Login</button>\n        </form>\n    )\n}\n\nexport default LoginForm","import React from 'react'\n\nconst BlogForm = (props) => {\n\n    return (\n        <div><br/>\n            <h3>Add New Blog:</h3>\n            <form onSubmit={props.addBlog}>\n                <div>\n                    Title:\n                    <input\n                        type=\"text\"\n                        value={props.blogTitle}\n                        name=\"BlogTitle\"\n                        onChange={props.handleTitleChange}\n                    />\n                </div>\n                <div>\n                    Author:\n                    <input\n                        type=\"text\"\n                        value={props.blogAuthor}\n                        name=\"BlogAuthor\"\n                        onChange={props.handleAuthorChange}\n                    />\n                </div>\n                <div>\n                    URL:\n                    <input\n                        type=\"text\"\n                        value={props.blogUrl}\n                        name=\"BlogUrl\"\n                        onChange={props.handleUrlChange}\n                    />\n                </div>\n                <button type=\"submit\">Save Blog</button>\n            </form> \n        </div>\n    )\n}\n\n\nexport default BlogForm","import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token = null\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = async newObject => {\n    const config = {\n        headers: {\n            Authorization: token\n        },\n    }\n\n    const response = await axios.post(baseUrl, newObject, config)\n    return response.data\n}\n\nconst setToken = newToken => {\n    token = `bearer ${newToken}`\n}\n\nexport default {\n    getAll,\n    create,\n    setToken\n}","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async credentials => {\n    const response = await axios.post(baseUrl, credentials)\n    return response.data\n}\n\nexport default { login }","import React, { useState, useEffect } from 'react'\nimport Blog from './components/Blog'\nimport Notification from './components/Notification'\nimport LoginForm from './components/LoginForm'\nimport BlogForm from './components/BlogForm'\nimport blogService from './services/blogs'\nimport loginService from './services/login'\n\nconst App = () => {\n    const [blogs, setBlogs] = useState([])\n    const [username, setUsername] = useState('') \n    const [password, setPassword] = useState('') \n    const [user, setUser] = useState(null)\n    const [newMessage, setNewMessage] = useState(null)\n    const [newMessageStyle, setNewMessageStyle] = useState('success')\n    const [blogTitle, setBlogTitle] = useState('')\n    const [blogAuthor, setBlogAuthor] = useState('')\n    const [blogUrl, setBlogUrl] = useState('')\n\n    const getAllBlogsHook = () => {\n        const fetchData = async () => {\n            const blogs = await blogService.getAll()\n            setBlogs( blogs )\n        }\n        fetchData()\n    }\n\n    const checkIfLoggedInHook = () => {\n        const loggedUserJSON = window.localStorage.getItem('loggedBlogAppUser')\n        if (loggedUserJSON) {\n          const loggedUser = JSON.parse(loggedUserJSON)\n          setUser(loggedUser)\n          blogService.setToken(loggedUser.token)\n        }\n    }\n\n    useEffect(getAllBlogsHook, [])\n    useEffect(checkIfLoggedInHook, [])\n\n    const handleLogin = async (event) => {\n        event.preventDefault()\n        try {\n            const userToLogin = await loginService.login({\n                username,\n                password,\n            })\n            window.localStorage.setItem(\n                'loggedBlogAppUser', JSON.stringify(userToLogin)\n            )\n            blogService.setToken(userToLogin.token)\n            setUser(userToLogin)\n            setUsername('')\n            setPassword('')\n            makeMessage(\n                'success', \n                'Logged in succesfully!',\n                5000\n            )\n        }\n        catch (exception) {\n            makeMessage(\n                'error', \n                'Login failed: Incorrect credentials',\n                5000\n            )\n        }\n    }\n\n    const handleLogout = () => {\n        window.localStorage.removeItem('loggedBlogAppUser')\n        window.location.reload();\n    }\n\n    const addBlog = async (event) => {\n        event.preventDefault()\n\n        const blogObject = {\n            title: blogTitle,\n            author: blogAuthor,\n            url: blogUrl\n        }\n  \n        const createdBlog = await blogService.create(blogObject)\n        setBlogs(blogs.concat(createdBlog))\n        \n        makeMessage(\n            'success', \n            `New blog with title \"${blogTitle}\" added!`,\n            5000\n        )\n        \n        setBlogAuthor('')\n        setBlogUrl('')\n        setBlogTitle('')\n    }\n\n    const handleTitleChange = (event) => {\n        setBlogTitle(event.target.value)\n    }\n    const handleAuthorChange = (event) => {\n        setBlogAuthor(event.target.value)\n    }\n    const handleUrlChange = (event) => {\n        setBlogUrl(event.target.value)\n    }\n\n      //Function for displaying messages:\n    const makeMessage = (style, message, ms) => {\n        setNewMessageStyle(style)\n        setNewMessage(message)\n        messageTimeOut(ms)\n    }\n\n    //Function for setting time out for messages:\n    const messageTimeOut = (ms) => {\n        return setTimeout(() => {setNewMessage(null)}, ms)\n    }\n\n    return (\n        <div className='boxDiv'>\n            <h1>Blog App</h1>\n            <Notification message={newMessage} style={newMessageStyle}\n             />\n            {user === null\n                ? <div>\n                    <LoginForm\n                        handleLogin={(event) => handleLogin(event)}\n                        username={username}\n                        password={password}\n                        setUsername={setUsername}\n                        setPassword={setPassword}\n                    />\n                </div>\n                : <div>\n                    <p>Logged in as {user.name}</p>\n                    <button onClick={() => handleLogout()}>Log Out</button>\n                    <BlogForm\n                        addBlog={addBlog}\n                        blogTitle={blogTitle}\n                        blogAuthor={blogAuthor}\n                        blogUrl={blogUrl}\n                        handleTitleChange={(event) => handleTitleChange(event)}\n                        handleAuthorChange={(event) => handleAuthorChange(event)}\n                        handleUrlChange={(event) => handleUrlChange(event)}\n                    />\n                    <h3>All Blogs:</h3>\n                    <ul>\n                        {blogs.map(blog =>\n                            <Blog key={blog.id} blog={blog} />\n                        )}\n                    </ul>\n                </div>\n            }\n        </div>\n    )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}