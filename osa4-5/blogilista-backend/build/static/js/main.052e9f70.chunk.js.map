{"version":3,"sources":["components/Blog.js","components/Notification.js","components/LoginForm.js","components/BlogForm.js","components/Togglable.js","services/blogs.js","services/login.js","App.js","index.js"],"names":["Blog","handleLike","blog","user","remove","useState","expanded","setExpanded","handleExpandClick","handleLikeClick","a","id","handleRemoveClick","className","title","Button","variant","style","float","verticalAlign","onClick","author","href","url","likes","username","size","Notification","message","Alert","LoginForm","handleLogin","setUsername","password","setPassword","onSubmit","type","value","name","onChange","target","BlogForm","createBlog","blogTitle","setBlogTitle","blogAuthor","setBlogAuthor","blogUrl","setBlogUrl","event","preventDefault","Togglable","React","forwardRef","props","ref","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","buttonLabel","children","displayName","token","getAll","axios","get","then","response","data","create","newObject","config","headers","Authorization","post","update","put","idToDelete","delete","setToken","newToken","login","credentials","App","blogs","setBlogs","setUser","newMessage","setNewMessage","newMessageStyle","setNewMessageStyle","blogFormRef","useRef","useEffect","blogService","sort","b","fetchData","loggedUserJSON","window","localStorage","getItem","loggedUser","JSON","parse","loginService","userToLogin","setItem","stringify","makeMessage","handleLogout","removeItem","addBlog","blogObject","current","createdBlog","concat","removeBlog","titleOf","find","confirm","filter","changedBlog","updatedBlog","map","ms","messageTimeOut","setTimeout","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.052e9f70.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nconst Blog = ({ handleLike, blog, user, remove }) => {\r\n    const [expanded, setExpanded] = useState(false)\r\n\r\n    const handleExpandClick = () => {\r\n        setExpanded(!expanded)\r\n    }\r\n\r\n    const handleLikeClick = async () => {\r\n        await handleLike(blog.id)\r\n    }\r\n\r\n    const handleRemoveClick = async () => {\r\n        await remove(blog.id)\r\n    }\r\n\r\n    return expanded\r\n        ? <div className='blog white-container'>\r\n            <div className='title-and-showbutton-div'>\r\n                <h2>{blog.title}</h2>\r\n                <Button variant='secondary' className='btn-sm' style={{float: 'right', verticalAlign:'text-top'}} onClick={handleExpandClick}>Hide</Button>\r\n            </div>\r\n            <p>Author: {blog.author}</p>\r\n            <p>\r\n                URL: <a href={`https://${blog.url}`}>{blog.url}</a>\r\n            </p>\r\n            <p className='blog-likes'>Likes: {blog.likes}\r\n                <Button variant='success' className='like-button btn-sm' onClick={handleLikeClick}>\r\n                    Like\r\n                </Button>\r\n            </p>\r\n            <p>Added By: {blog.user.username}</p>\r\n            {user.username === blog.user.username\r\n                ? <Button variant='danger' size='sm' onClick={handleRemoveClick}>Remove</Button>\r\n                : ''\r\n            }\r\n        </div>\r\n        : <div className='blog white-container blogHidden'>\r\n            <h5>{blog.title}</h5>\r\n            <Button style={{float: 'right', verticalAlign: 'middle'}} variant='info' className='btn-sm' onClick={handleExpandClick}>Show</Button>\r\n        </div>\r\n}\r\n\r\nexport default Blog\r\n","import React from 'react'\nimport Alert from 'react-bootstrap/Alert'\n\nconst Notification = ({ message, style }) => {\n\n    if (message === null) return null\n    return <Alert id='notification' variant={style}>{message}</Alert>\n    \n}\n\nexport default Notification","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Button from 'react-bootstrap/Button'\n\nconst LoginForm = ({\n    handleLogin,\n    username,\n    setUsername,\n    password,\n    setPassword\n}) => {\n    return (\n        <div className='loginFormDiv'>\n            <form onSubmit={handleLogin} className='loginInputBox'>\n                <div className='formInputDiv'>\n                    <h6 className='inputText'>Username:</h6>\n                    <input\n                        type=\"text\"\n                        value={username}\n                        name=\"Username\"\n                        onChange={({ target }) => setUsername(target.value)}\n                        id=\"username\"\n                        className=\"loginInputField inputField\"\n                    />\n                </div>\n                <div className='formInputDiv'>\n                    <h6 className='inputText'>Password:</h6>\n                    <input\n                        type=\"password\"\n                        value={password}\n                        name=\"Password\"\n                        onChange={({ target }) => setPassword(target.value)}\n                        id=\"password\"\n                        className=\"loginInputField inputField\"\n                    />\n                </div>\n                <Button className='btn-sm' type=\"submit\" id=\"login-button\">Login</Button>\n            </form>\n        </div>\n    )\n}\n\nLoginForm.propTypes = {\n    handleLogin: PropTypes.func.isRequired,\n    setUsername: PropTypes.func.isRequired,\n    setPassword: PropTypes.func.isRequired,\n    username: PropTypes.string.isRequired,\n    password: PropTypes.string.isRequired\n}\n\nexport default LoginForm","import React, { useState } from 'react'\nimport Button from 'react-bootstrap/Button'\n\nconst BlogForm = ({ createBlog }) => {\n\n    const [blogTitle, setBlogTitle] = useState('')\n    const [blogAuthor, setBlogAuthor] = useState('')\n    const [blogUrl, setBlogUrl] = useState('')\n\n    const addBlog = (event) => {\n        event.preventDefault()\n\n        createBlog({\n            title: blogTitle,\n            author: blogAuthor,\n            url: blogUrl\n        })\n        setBlogTitle('')\n        setBlogAuthor('')\n        setBlogUrl('')\n    }\n\n    const handleTitleChange = (event) => {\n        setBlogTitle(event.target.value)\n    }\n\n    const handleAuthorChange = (event) => {\n        setBlogAuthor(event.target.value)\n    }\n\n    const handleUrlChange = (event) => {\n        setBlogUrl(event.target.value)\n    }\n\n    return (\n        <div className=\"blogFormDiv\">\n            <h3 className=\"blogFormTitle\">Add New Blog:</h3>\n            <form onSubmit={addBlog} id=\"BlogForm\" className=\"blogInputBox\">\n                <div className=\"formInputDiv\">\n                    <h6 className=\"inputText\">Title:</h6>\n                    <input\n                        type=\"text\"\n                        value={blogTitle}\n                        name=\"BlogTitle\"\n                        id=\"BlogTitle\"\n                        onChange={handleTitleChange}\n                        className=\"blogInputField inputField\"\n                    />\n                </div>\n                <div className=\"formInputDiv\">\n                    <h6 className=\"inputText\">Author:</h6>\n                    <input\n                        type=\"text\"\n                        value={blogAuthor}\n                        name=\"BlogAuthor\"\n                        id=\"BlogAuthor\"\n                        onChange={handleAuthorChange}\n                        className=\"blogInputField inputField\"\n                    />\n                </div>\n                <div className=\"formInputDiv\">\n                    <h6 className=\"inputText\">URL:</h6>\n                    <input\n                        type=\"text\"\n                        value={blogUrl}\n                        name=\"BlogUrl\"\n                        id=\"BlogUrl\"\n                        onChange={handleUrlChange}\n                        className=\"blogInputField inputField\"\n                    />\n                </div>\n                <Button variant='primary' type=\"submit\" className='btn-sm'>Save Blog</Button>\n            </form>\n        </div>\n    )\n}\n\n\nexport default BlogForm","import React, { useState, useImperativeHandle } from 'react'\nimport PropTypes from 'prop-types'\nimport Button from 'react-bootstrap/Button'\n\nconst Togglable = React.forwardRef((props, ref) => {\n    const [visible, setVisible] = useState(false)\n\n    const hideWhenVisible = { display: visible ? 'none' : '' }\n    const showWhenVisible = { display: visible ? '' : 'none' }\n\n    const toggleVisibility = () => {\n        setVisible(!visible)\n    }\n\n    useImperativeHandle(ref, () => {\n        return {\n            toggleVisibility\n        }\n    })\n\n    return (\n        <div>\n            <div style={hideWhenVisible}>\n                <Button variant='primary' className='btn-sm' onClick={toggleVisibility}>{props.buttonLabel}</Button>\n            </div>\n            <div style={showWhenVisible}>\n                {props.children}\n                <Button variant='secondary' className='btn-sm' onClick={toggleVisibility}>Cancel</Button>\n            </div>\n        </div>\n    )\n})\n\nTogglable.displayName = 'Togglable'\n\nTogglable.propTypes = {\n    buttonLabel: PropTypes.string.isRequired\n}\n\nexport default Togglable","import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token = null\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = async newObject => {\n    const config = {\n        headers: {\n            Authorization: token\n        },\n    }\n\n    const response = await axios.post(baseUrl, newObject, config)\n    return response.data\n}\n\nconst update = async (id, newObject) => {\n    const response = await axios.put(`${baseUrl}/${id}`, newObject)\n    return response.data\n}\n\nconst remove = async (idToDelete) => {\n    const config = {\n        headers: {\n            Authorization: token\n        },\n    }\n\n    const response = await axios.delete(`${baseUrl}/${idToDelete}`, config)\n    return response.data\n}\n\nconst setToken = newToken => {\n    token = `bearer ${newToken}`\n}\n\nexport default {\n    getAll,\n    create,\n    update,\n    remove,\n    setToken\n}","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async credentials => {\n    const response = await axios.post(baseUrl, credentials)\n    return response.data\n}\n\nexport default { login }","import React, { useState, useEffect, useRef } from 'react'\nimport Blog from './components/Blog'\nimport Notification from './components/Notification'\nimport LoginForm from './components/LoginForm'\nimport BlogForm from './components/BlogForm'\nimport Togglable from './components/Togglable'\nimport blogService from './services/blogs'\nimport loginService from './services/login'\nimport Button from 'react-bootstrap/Button'\n\nconst App = () => {\n    const [blogs, setBlogs] = useState([])\n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n    const [user, setUser] = useState(null)\n    const [newMessage, setNewMessage] = useState(null)\n    const [newMessageStyle, setNewMessageStyle] = useState('success')\n    const blogFormRef = useRef()\n\n    const getAllBlogsHook = () => {\n        const fetchData = async () => {\n            let blogs = await blogService.getAll()\n            blogs = blogs.sort((a, b) => (a.likes < b.likes) ? 1 : -1)\n            setBlogs( blogs )\n        }\n        fetchData()\n    }\n\n    const checkIfLoggedInHook = () => {\n        const loggedUserJSON = window.localStorage.getItem('loggedBlogAppUser')\n        if (loggedUserJSON) {\n            const loggedUser = JSON.parse(loggedUserJSON)\n            setUser(loggedUser)\n            blogService.setToken(loggedUser.token)\n        }\n    }\n\n    useEffect(getAllBlogsHook, [])\n    useEffect(checkIfLoggedInHook, [])\n\n    const handleLogin = async (event) => {\n        event.preventDefault()\n        try {\n            const userToLogin = await loginService.login({\n                username,\n                password,\n            })\n            window.localStorage.setItem(\n                'loggedBlogAppUser', JSON.stringify(userToLogin)\n            )\n            blogService.setToken(userToLogin.token)\n            setUser(userToLogin)\n            setUsername('')\n            setPassword('')\n            makeMessage(\n                'success',\n                'Logged in succesfully!',\n                5000\n            )\n        }\n        catch (exception) {\n            makeMessage(\n                'danger',\n                'Login failed: Incorrect credentials',\n                5000\n            )\n        }\n    }\n\n    const handleLogout = async () => {\n        window.localStorage.removeItem('loggedBlogAppUser')\n        setUser(null)\n        makeMessage(\n            'success',\n            'Logged out succesfully!',\n            5000\n        )\n    }\n\n    const addBlog = async (blogObject) => {\n        blogFormRef.current.toggleVisibility()\n\n        const createdBlog = await blogService.create(blogObject)\n        setBlogs(blogs.concat(createdBlog))\n\n        makeMessage(\n            'success',\n            `New blog with title \"${createdBlog.title}\" added!`,\n            5000\n        )\n    }\n\n    const removeBlog = async (id) => {\n        const titleOf = blogs.find(b => b.id === id).title\n        if (window.confirm(`Do you really want to delete \"${titleOf}\"?`)) {\n            await blogService\n                .remove(id)\n\n            setBlogs(blogs.filter(b => b.id !== id))\n            makeMessage(\n                'success',\n                `Successfully removed \"${titleOf}\"`,\n                5000\n            )\n        }\n    }\n\n    const handleLike = async (id) => {\n\n        const blog = blogs.find(b => b.id === id)\n\n        const changedBlog = {\n            ...blog,\n            likes: blog.likes + 1,\n            user: blog.user.id\n        }\n        const updatedBlog = await blogService\n            .update(id, changedBlog)\n\n        setBlogs(blogs.map(blog => blog.id !== id ? blog : { ...updatedBlog, user: blog.user }))\n    }\n\n    //Function for displaying messages:\n    const makeMessage = (style, message, ms) => {\n        setNewMessageStyle(style)\n        setNewMessage(message)\n        messageTimeOut(ms)\n    }\n\n    //Function for setting time out for messages:\n    const messageTimeOut = (ms) => {\n        return setTimeout(() => {setNewMessage(null)}, ms)\n    }\n\n    const loginForm = () => (\n        <Togglable buttonLabel='Login'>\n            <LoginForm\n                handleLogin={handleLogin}\n                username={username}\n                password={password}\n                setUsername={setUsername}\n                setPassword={setPassword}\n            />\n        </Togglable>\n    )\n\n    const blogForm = () => (\n        <Togglable buttonLabel='Add New Blog' ref={blogFormRef}>\n            <BlogForm createBlog={addBlog} />\n        </Togglable>\n    )\n\n    const loggedInText = () => (\n        <div className=\"logged-in-div float-right\">\n            <div className='logged-in-text text-right'>\n                <b className=''>Logged in as </b>\n                <h5 >{user.name}</h5>\n            </div>\n            <div>\n                <Button variant='danger' className='btn-sm float-right' onClick={handleLogout}>Log Out</Button>\n            </div> \n        </div>\n    )\n\n    const blogList = () => (\n            <div className=\"allBlogs white-container\">\n                <h3>All Blogs:</h3>\n                <div id=\"blogs-listed\">\n                    {blogs.map(blog =>\n                        <Blog\n                            key={blog.id}\n                            handleLike={handleLike}\n                            blog={blog}\n                            user={user}\n                            remove={removeBlog}\n                        />\n                    )}\n                </div>\n            </div>\n    )\n\n\n    return (\n        <div className='boxDiv'>\n            <div className='row'>\n                <div className='col'>\n                    <h1>Blog App</h1>\n                </div>\n                {user === null\n                    ? null\n                    : <div className='col'>\n                            {loggedInText()}\n                    </div>\n                }\n            </div>\n\n            <div className='row'>\n                <div className='col'>\n                    <Notification message={newMessage} style={newMessageStyle} />\n                </div>\n            </div>\n\n            {user===null \n                ? <>\n                    <div className='row'>\n                        <div className='col'>\n                            <h3>Log in to Blog App</h3>\n                            {loginForm()}\n                        </div>\n                    </div>\n                </>\n                : <>\n                    <div className='row'>\n                        <div className='col'>\n                            {blogForm()}\n                        </div>\n                    </div>\n                    <div className='row subdiv-1'>\n                        <div className='col'>\n                            {blogList()}\n                        </div>\n                    </div>\n                </>\n            }\n        </div>\n    )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}